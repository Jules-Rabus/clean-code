services:

  nest:
    build:
      context: .
      dockerfile: Dockerfile.nest
    ports:
      - "3001:3000"
    environment:
      - PORT=${PORT:-3000}
      - NODE_ENV=${NODE_ENV:-development}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-app_test}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_USER=${MONGO_USER:-root}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_DB=${MONGO_DB:-app_test}

  express:
    build:
      context: .
      dockerfile: Dockerfile.express
    container_name: express_service
    ports:
      - "3002:3000"
    environment:
      - PORT=${PORT:-3000}
      - NODE_ENV=${NODE_ENV:-development}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-app_test}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_USER=${MONGO_USER:-root}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_DB=${MONGO_DB:-app_test}

  next:
    build:
      context: .
      dockerfile: Dockerfile.next
    container_name: next_service
    platform: linux/amd64
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}

  postgres:
    image: postgres:17
    container_name: postgres_db
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  mongo:
    image: mongo:6.0
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "127.0.0.1:27018:27017"
    volumes:
      - mongo_data:/data/db

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - postgres

volumes:
  postgres_data:
  mongo_data: